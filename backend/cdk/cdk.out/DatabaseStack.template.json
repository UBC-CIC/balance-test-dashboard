{
 "Resources": {
  "SecretA720EF05": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "GenerateStringKey": "password",
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/Secret/Resource"
   }
  },
  "balancetestpostgresqlinstanceSubnetGroupF78110BB": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for balancetest-postgresql-instance database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet1Subnet8BA87DE45B0B5EB2"
     },
     {
      "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet2SubnetD1E1933170382F7C"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/balancetest-postgresql-instance/SubnetGroup/Default"
   }
  },
  "balancetestpostgresqlinstanceSecurityGroup0F67DBE5": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for balancetest-postgresql-instance database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "10.1.0.0/16",
      "Description": "BalanceTest-RDS-Postgres-Ingress",
      "FromPort": 5432,
      "IpProtocol": "tcp",
      "ToPort": 5432
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCFBF0FFB322759C6A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/balancetest-postgresql-instance/SecurityGroup/Resource"
   }
  },
  "balancetestpostgresqlinstance15C46DEE": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "400",
    "AllowMajorVersionUpgrade": false,
    "AutoMinorVersionUpgrade": true,
    "BackupRetentionPeriod": 30,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBName": "balancetest-postgresql-instance",
    "DBSubnetGroupName": {
     "Ref": "balancetestpostgresqlinstanceSubnetGroupF78110BB"
    },
    "DeleteAutomatedBackups": false,
    "DeletionProtection": true,
    "Engine": "postgres",
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "SecretA720EF05"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "SecretA720EF05"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MultiAZ": true,
    "PubliclyAccessible": false,
    "StorageEncrypted": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "balancetestpostgresqlinstanceSecurityGroup0F67DBE5",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/balancetest-postgresql-instance/Resource"
   }
  },
  "BalanceTestpostgresqlRDSConnectLogsDDBBBA41": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/lambda/BalanceTest-postgresql-RDS-connect",
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/BalanceTest-postgresqlRDSConnect-Logs/Resource"
   }
  },
  "BalanceTestpostgresqlRDSConnectLambdaRole7999CCBF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role gives access to appropriate S3 functions needed for doing S3 Select for Lambda.",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2FullAccess"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "BalanceTestpostgresqlRDSConnectLogsDDBBBA41",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "BalanceTest-postgresqlRDSConnectLambdaPolicy"
     }
    ],
    "RoleName": "BalanceTest-postgresqlRDSConnectLambda-Role"
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/BalanceTest-postgresqlRDSConnectLambda-Role/Resource"
   }
  },
  "BalanceTestpostgresqlRDSconnect4A449849": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-684904187051-ca-central-1",
     "S3Key": "6873f2c4361471f12127eab34acd8d8d6df904d3afe7613bf235ec039b12a15b.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "BalanceTestpostgresqlRDSConnectLambdaRole7999CCBF",
      "Arn"
     ]
    },
    "FunctionName": "BalanceTest-postgresql-RDS-connect",
    "Handler": "postgresql-rds-connect.lambda_handler",
    "MemorySize": 512,
    "Runtime": "python3.7",
    "Timeout": 180
   },
   "DependsOn": [
    "BalanceTestpostgresqlRDSConnectLambdaRole7999CCBF"
   ],
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/BalanceTest-postgresql-RDS-connect/Resource",
    "aws:asset:path": "asset.6873f2c4361471f12127eab34acd8d8d6df904d3afe7613bf235ec039b12a15b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VQ0WrDMAz8lr4r2tJBxx6XlY3CntIPKIqjBTeJXSx7Yxj/++x0KYw93enukDhtcfeE9xv6kkr1YzXpDuPRkxohS6corBx7mcnQwC5bywwvH+bKErheMO7JU0fCByOejGI4hs6wf3M2XEp43/wT1mgCVttlcXDaf98Sf4QEkx3ynXc73AIrT6BpxtjaiYtcMMdp7nrC+BqM8tqa4qw8gTycSCT3wucCecYmqJF9kzskaFlscLnF4uZvDNoMy+5fI4GxPeNZ7j7rHdaPWG/OonXlgvF6Zmyv+ANlLkH3XAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}