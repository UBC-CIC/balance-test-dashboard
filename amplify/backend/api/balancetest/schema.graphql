# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Patient {
  patient_id: String!
  name: String
  email: String
}

type CareProvider {
  care_provider_id: String!
  email: String
}

type PatientCareprovider {
  patient_id: String!
  care_provider_id: String!
}

type Query {
  # getters
  getCareproviderById(care_provider_id: String!): CareProvider
  getPatientById(patient_id: String!): Patient
  getPatients(care_provider_id: String!): [Patient]
  getTestEvents(
    patient_id: String!
    test_type: String
    from_time: AWSDateTime
    to_time: AWSDateTime
    if_completed: Boolean
    sort: SortDirection
    count: Int
  ): [TestEvent]
  # analytics
  getAverageBalanceScore(patientId: String!, numDays: Int!): Int
}

type Mutation {
  createPatient(patient_id: String!, email: String, name: String): String
  createCareProvider(care_provider_id: String!, email: String!): String
  addPatientToCareProvider(
    care_provider_id: String!
    patient_id: String!
  ): PatientCareprovider
  createAndAssignTest(
    test_event_id: String!
    patient_id: String!
    test_type: String!
    notes: String
  ): TestEvent
}

type TestEvent {
  test_event_id: String!
  patient_id: String!
  test_type: String!
  if_completed: Boolean!
  balance_score: Int
  doctor_score: Int
  notes: String
  start_time: AWSDateTime
  end_time: AWSDateTime
}

enum SortDirection {
  asc
  desc
}

schema {
  query: Query
  mutation: Mutation
}
