{
 "Resources": {
  "vpcSecurityGroup4DDC33F7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "allow traffic from this security group and rds proxy",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "12.0.0.0/16",
      "Description": "allow traffic from within vpc",
      "FromPort": 5432,
      "IpProtocol": "tcp",
      "ToPort": 5432
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCFBF0FFB322759C6A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/vpcSecurityGroup/Resource"
   }
  },
  "vpcSecurityGroupfromDatabaseStackvpcSecurityGroup9B49D3E0IndirectPortD2FD7E38": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Allow connections to the database Instance from the Proxy",
    "FromPort": {
     "Fn::GetAtt": [
      "balancetestpostgresqlinstance42ADA54B",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "vpcSecurityGroup4DDC33F7",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "vpcSecurityGroup4DDC33F7",
      "GroupId"
     ]
    },
    "ToPort": {
     "Fn::GetAtt": [
      "balancetestpostgresqlinstance42ADA54B",
      "Endpoint.Port"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/vpcSecurityGroup/from DatabaseStackvpcSecurityGroup9B49D3E0:{IndirectPort}"
   }
  },
  "SecretA720EF05": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludeCharacters": "\"@/\\",
     "GenerateStringKey": "password",
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    },
    "Name": "postgresql-credentials"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/Secret/Resource"
   }
  },
  "RdsMonitoringRole696C9BB4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "monitoring.rds.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows RDS to manage CloudWatch Logs resources for Enhanced Monitoring",
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"
    ],
    "RoleName": "balancetest-rds-monitoring-role"
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/RdsMonitoringRole/Resource"
   }
  },
  "balancetestpostgresqlinstanceSubnetGroupD97017C6": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for balancetest_postgresql_instance database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet1Subnet8BA87DE45B0B5EB2"
     },
     {
      "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet2SubnetD1E1933170382F7C"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/balancetest_postgresql_instance/SubnetGroup/Default"
   }
  },
  "balancetestpostgresqlinstanceSecret806A3114": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": {
      "Fn::Join": [
       "",
       [
        "{\"username\":\"{{resolve:secretsmanager:",
        {
         "Ref": "SecretA720EF05"
        },
        ":SecretString:username::}}\"}"
       ]
      ]
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/balancetest_postgresql_instance/Secret/Resource"
   }
  },
  "balancetestpostgresqlinstanceSecretAttachment3A14B604": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "balancetestpostgresqlinstanceSecret806A3114"
    },
    "TargetId": {
     "Ref": "balancetestpostgresqlinstance42ADA54B"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/balancetest_postgresql_instance/Secret/Attachment/Resource"
   }
  },
  "balancetestpostgresqlinstance42ADA54B": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "400",
    "AllowMajorVersionUpgrade": false,
    "AutoMinorVersionUpgrade": true,
    "BackupRetentionPeriod": 30,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBName": "balancetest_postgresql_instance",
    "DBSubnetGroupName": {
     "Ref": "balancetestpostgresqlinstanceSubnetGroupD97017C6"
    },
    "DeleteAutomatedBackups": false,
    "DeletionProtection": true,
    "Engine": "postgres",
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "balancetestpostgresqlinstanceSecret806A3114"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "balancetestpostgresqlinstanceSecret806A3114"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MonitoringInterval": 60,
    "MonitoringRoleArn": {
     "Fn::GetAtt": [
      "RdsMonitoringRole696C9BB4",
      "Arn"
     ]
    },
    "MultiAZ": true,
    "PubliclyAccessible": false,
    "StorageEncrypted": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "vpcSecurityGroup4DDC33F7",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/balancetest_postgresql_instance/Resource"
   }
  },
  "ProxyIAMRole2FE8AB0F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "rds.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/Proxy/IAMRole/Resource"
   }
  },
  "ProxyIAMRoleDefaultPolicy59EB0117": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "SecretA720EF05"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProxyIAMRoleDefaultPolicy59EB0117",
    "Roles": [
     {
      "Ref": "ProxyIAMRole2FE8AB0F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/Proxy/IAMRole/DefaultPolicy/Resource"
   }
  },
  "ProxyCB0DFB71": {
   "Type": "AWS::RDS::DBProxy",
   "Properties": {
    "Auth": [
     {
      "AuthScheme": "SECRETS",
      "IAMAuth": "DISABLED",
      "SecretArn": {
       "Ref": "SecretA720EF05"
      }
     }
    ],
    "DBProxyName": "DatabaseStackProxy33A2A191",
    "EngineFamily": "POSTGRESQL",
    "RoleArn": {
     "Fn::GetAtt": [
      "ProxyIAMRole2FE8AB0F",
      "Arn"
     ]
    },
    "VpcSubnetIds": [
     {
      "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet1Subnet8BA87DE45B0B5EB2"
     },
     {
      "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet2SubnetD1E1933170382F7C"
     }
    ],
    "RequireTLS": false,
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "vpcSecurityGroup4DDC33F7",
       "GroupId"
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/Proxy/Resource"
   }
  },
  "ProxyProxyTargetGroupB462B5C5": {
   "Type": "AWS::RDS::DBProxyTargetGroup",
   "Properties": {
    "DBProxyName": {
     "Ref": "ProxyCB0DFB71"
    },
    "TargetGroupName": "default",
    "ConnectionPoolConfigurationInfo": {},
    "DBInstanceIdentifiers": [
     {
      "Ref": "balancetestpostgresqlinstance42ADA54B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/Proxy/ProxyTargetGroup"
   }
  },
  "DBProxyRoleB1DE1617": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::684904187051:root"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/DBProxyRole/Resource"
   }
  },
  "DBProxyRoleDefaultPolicyEDC93D09": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "rds-db:connect",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:rds-db:ca-central-1:684904187051:dbuser:",
          {
           "Fn::Select": [
            6,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::GetAtt": [
                "ProxyCB0DFB71",
                "DBProxyArn"
               ]
              }
             ]
            }
           ]
          },
          "/admin"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DBProxyRoleDefaultPolicyEDC93D09",
    "Roles": [
     {
      "Ref": "DBProxyRoleB1DE1617"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/DBProxyRole/DefaultPolicy/Resource"
   }
  },
  "BalanceTestpostgresqlRDSConnectLogsDDBBBA41": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/lambda/BalanceTest-postgresql-RDS-connect",
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/BalanceTest-postgresqlRDSConnect-Logs/Resource"
   }
  },
  "BalanceTestpostgresqlRDSConnectLambdaRole7999CCBF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role gives access to appropriate S3 functions needed for doing S3 Select for Lambda.",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2FullAccess"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "BalanceTestpostgresqlRDSConnectLogsDDBBBA41",
           "Arn"
          ]
         }
        },
        {
         "Action": "secretsmanager:GetSecretValue",
         "Effect": "Allow",
         "Resource": "arn:aws:secretsmanager:ca-central-1:684904187051:secret:postgresql-credentials-??????"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "BalanceTest-postgresqlRDSConnectLambdaPolicy"
     }
    ],
    "RoleName": "BalanceTest-postgresqlRDSConnectLambda-Role"
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/BalanceTest-postgresqlRDSConnectLambda-Role/Resource"
   }
  },
  "postgresqlRDSConnectLayerD9176A9D": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-684904187051-ca-central-1",
     "S3Key": "f59f4121318cb1f52308fa20490d34305bb91ed413a9ea3c763f3cfd22aced2c.zip"
    },
    "CompatibleRuntimes": [
     "nodejs14.x"
    ],
    "Description": "Contains libraries for the BalanceTest-postgresql-RDS-connect function."
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/postgresqlRDSConnectLayer/Resource",
    "aws:asset:path": "asset.f59f4121318cb1f52308fa20490d34305bb91ed413a9ea3c763f3cfd22aced2c.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "BalanceTestpostgresqlRDSconnect4A449849": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-684904187051-ca-central-1",
     "S3Key": "d4db39f119044708a269763715a91b893661ad46ef96a210357aad461c6b0158.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "BalanceTestpostgresqlRDSConnectLambdaRole7999CCBF",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "PGDATABASE": "balancetest_postgresql_instance",
      "PGHOST": {
       "Fn::GetAtt": [
        "ProxyCB0DFB71",
        "Endpoint"
       ]
      },
      "PG_SECRET_NAME": {
       "Fn::Join": [
        "-",
        [
         {
          "Fn::Select": [
           0,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "SecretA720EF05"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "SecretA720EF05"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       ]
      },
      "PGUSER": {
       "Fn::Join": [
        "",
        [
         "{{resolve:secretsmanager:",
         {
          "Ref": "SecretA720EF05"
         },
         ":SecretString:username::}}"
        ]
       ]
      },
      "PGPORT": "5432"
     }
    },
    "FunctionName": "BalanceTest-postgresql-RDS-connect",
    "Handler": "postgresql-rds-connect.handler",
    "Layers": [
     {
      "Ref": "postgresqlRDSConnectLayerD9176A9D"
     }
    ],
    "MemorySize": 512,
    "Runtime": "nodejs14.x",
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "VPCStack:ExportsOutputFnGetAttbalanceTestVPCFBF0FFB3DefaultSecurityGroupDA29CDF5"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet1Subnet8BA87DE45B0B5EB2"
      },
      {
       "Fn::ImportValue": "VPCStack:ExportsOutputRefbalanceTestVPCprivatesubnetSubnet2SubnetD1E1933170382F7C"
      }
     ]
    }
   },
   "DependsOn": [
    "BalanceTestpostgresqlRDSConnectLambdaRole7999CCBF"
   ],
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/BalanceTest-postgresql-RDS-connect/Resource",
    "aws:asset:path": "asset.d4db39f119044708a269763715a91b893661ad46ef96a210357aad461c6b0158",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RTU/DMAz9LbtngQ1piONKBZrEYeoQ18lNTcjaJihOgKrqf8f9GtMOnPye34v95Kzl5kHeLuCblqool5XJZXsIoErBrWOLas0cVfQmNM/exU/x+G7/b+ys9kjUCULlMVANFjT6YQ7zyd+jsbyC1xi2gbd+1GgvDNdKJwzUss1chb1pqHtXGdX0dESd8AXJNoUAORDuLAWwCsUh5hbDOXGaXDZm91/CNDm/nMW9dz/NqF3DMegwqxOV0xzgxenzshmzBnVeAKvQoH9DT8bZwXHJn6JVYRJmzNe8OwIR31Nu+8JcJlGVGBLO1okMyUXPcQeVv1Abq4crTUInrCtQnujma7WRq3u5WpzImKWPNpgaZTbWX87/NvARAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "DatabaseStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ExportsOutputRefSecretA720EF052D953DED": {
   "Value": {
    "Ref": "SecretA720EF05"
   },
   "Export": {
    "Name": "DatabaseStack:ExportsOutputRefSecretA720EF052D953DED"
   }
  },
  "ExportsOutputFnGetAttProxyCB0DFB71EndpointFB28556A": {
   "Value": {
    "Fn::GetAtt": [
     "ProxyCB0DFB71",
     "Endpoint"
    ]
   },
   "Export": {
    "Name": "DatabaseStack:ExportsOutputFnGetAttProxyCB0DFB71EndpointFB28556A"
   }
  },
  "ExportsOutputFnGetAttvpcSecurityGroup4DDC33F7GroupIdED799254": {
   "Value": {
    "Fn::GetAtt": [
     "vpcSecurityGroup4DDC33F7",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "DatabaseStack:ExportsOutputFnGetAttvpcSecurityGroup4DDC33F7GroupIdED799254"
   }
  },
  "ExportsOutputFnGetAttBalanceTestpostgresqlRDSconnect4A449849Arn75E70BB3": {
   "Value": {
    "Fn::GetAtt": [
     "BalanceTestpostgresqlRDSconnect4A449849",
     "Arn"
    ]
   },
   "Export": {
    "Name": "DatabaseStack:ExportsOutputFnGetAttBalanceTestpostgresqlRDSconnect4A449849Arn75E70BB3"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}